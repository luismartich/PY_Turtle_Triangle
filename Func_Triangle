
def hasFinalLetter(strList, Letters):
    listStr = []
    for i in strList:
        if i[len(i)-1] in Letters:
            listStr.append(i)
    return listStr
 
list1 = ["The", "world", "is", "beautiful", "and", "full", "of", "emotions"]
word = "berlin"

result = hasFinalLetter(list1, word)
print(result)


#test case 1
list2 = ["Hello worlD","hotel", "Howdy"]
word2 = "yD"
result2 = hasFinalLetter(list2, word2)
print(result2)

#test case 2
list3 = ["Hello", "hotel", "How"]
word3 = "yD"
result3 = hasFinalLetter(list3, word3)
print(result3)

#test case 3
list4 = ["WorlD", "libra", "Bye"]
word4 = "aL"
result4 = hasFinalLetter(list4, word4)
print(result4)


def isDivisible(maxInt, twoInts):
    listNum= []
    for i in range(1, maxInt):
        if i % twoInts[0]==0 and i % twoInts[1] ==0:
            listNum.append(i)
    return listNum

num = 50
numD= (2,5)

result2 = isDivisible(num, numD)
print(result2)


#test case 1
num2 = 80
numD2 = 20,7
print(isDivisible(num2,numD2))

#test case 2
num2 = 100
numD2 = 8,10
print(isDivisible(num2,numD2))

#test case 3
num2 = 60
numD2 = 3,5
print(isDivisible(num2,numD2))


import turtle
scr = turtle.Screen()
t1 = turtle.Turtle()

def drawTriangle(t, sideLen):
    t.down()
    t.lt(60)
    t.fd(sideLen)
    t.rt(120)
    t.fd(sideLen)
    t.rt(120)
    t.fd(sideLen)
    t.rt(180)

drawTriangle(t1,100)

def makeTriforce(turt, triforceSide):
    #turt.clear() #optional 
    drawTriangle(turt, triforceSide / 2)    #callfunction
    turt.fd(triforceSide / 2)
    drawTriangle(turt, triforceSide / 2)    #callfunction
    turt.lt(120)
    turt.fd(triforceSide / 2)
    turt.rt(120)
    drawTriangle(turt, triforceSide / 2)    #callfunction

makeTriforce(t1,300)
